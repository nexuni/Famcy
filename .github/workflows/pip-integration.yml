# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: 3.7
            postgres: 13

    env:
      PSYCOPG2_TESTDB: postgres
      PSYCOPG2_TESTDB_HOST: 127.0.0.1
      PSYCOPG2_TESTDB_USER: postgres
      PSYCOPG2_TESTDB_PASSWORD: password

    services:
      postgresql:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel twine 
    #   flake8 tox coverage 
    #     if  [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Run tests and coverage report
    #   run: |
    #     cd gadgethiServerUtils
    #     python3 main.py configure config/config.yaml
    #     cat ~/.gserver/config/config.yaml
    #     pwd
    #     cat ~/.gserver/credentials.yaml
    #     mkdir -p /opt/doday/LOG_FILES/
    #     cd ..
    #     tox -e ${{ matrix.python }}
    #     coverage run -m unittest
    #     coverage report
    #     coverage html
    # - name: Archive code coverage html report
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: code-coverage-report
    #     path: htmlcov
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py bdist_wheel
        twine upload dist/*